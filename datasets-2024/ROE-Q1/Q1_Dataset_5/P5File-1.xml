<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]>
<us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230225239A1-20230720.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20230704" date-publ="20230720">
<us-bibliographic-data-application lang="EN" country="US">
<publication-reference>
<document-id>
<country>US</country>
<doc-number>20230225239</doc-number>
<kind>A1</kind>
<date>20230720</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>18190358</doc-number>
<date>20230327</date>
</document-id>
</application-reference>
<us-application-series-code>18</us-application-series-code>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>A</section>
<class>01</class>
<subclass>B</subclass>
<main-group>79</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>N</subclass>
<main-group>3</main-group>
<subgroup>08</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>T</subclass>
<main-group>7</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>T</subclass>
<main-group>3</main-group>
<subgroup>40</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>V</subclass>
<main-group>10</main-group>
<subgroup>82</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>V</subclass>
<main-group>10</main-group>
<subgroup>774</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>V</subclass>
<main-group>20</main-group>
<subgroup>68</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>V</subclass>
<main-group>20</main-group>
<subgroup>10</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>18</main-group>
<subgroup>243</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>18</main-group>
<subgroup>214</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>18</main-group>
<subgroup>25</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>N</subclass>
<main-group>3</main-group>
<subgroup>045</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>V</subclass>
<main-group>10</main-group>
<subgroup>764</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>V</subclass>
<main-group>20</main-group>
<subgroup>60</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classifications-cpc>
<main-cpc>
<classification-cpc>
<cpc-version-indicator><date>20130101</date></cpc-version-indicator>
<section>A</section>
<class>01</class>
<subclass>B</subclass>
<main-group>79</main-group>
<subgroup>005</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
<scheme-origination-code>C</scheme-origination-code>
</classification-cpc>
</main-cpc>
<further-cpc>
<classification-cpc>
<cpc-version-indicator><date>20130101</date></cpc-version-indicator>
<section>G</section>
<class>06</class>
<subclass>N</subclass>
<main-group>3</main-group>
<subgroup>08</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
<scheme-origination-code>C</scheme-origination-code>
</classification-cpc>
<classification-cpc>
<cpc-version-indicator><date>20130101</date></cpc-version-indicator>
<section>G</section>
<class>06</class>
<subclass>T</subclass>
<main-group>7</main-group>
<subgroup>0012</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
<scheme-origination-code>C</scheme-origination-code>
</classification-cpc>
<classification-cpc>
<cpc-version-indicator><date>20130101</date></cpc-version-indicator>
<section>G</section>
<class>06</class>
<subclass>T</subclass>
<main-group>3</main-group>
<subgroup>40</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
<scheme-origination-code>C</scheme-origination-code>
</classification-cpc>
<classification-cpc>
<cpc-version-indicator><date>20220101</date></cpc-version-indicator>
<section>G</section>
<class>06</class>
<subclass>V</subclass>
<main-group>10</main-group>
<subgroup>82</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
<scheme-origination-code>C</scheme-origination-code>
</classification-cpc>
<classification-cpc>
<cpc-version-indicator><date>20220101</date></cpc-version-indicator>
<section>G</section>
<class>06</class>
<subclass>V</subclass>
<main-group>10</main-group>
<subgroup>774</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
<scheme-origination-code>C</scheme-origination-code>
</classification-cpc>
<classification-cpc>
<cpc-version-indicator><date>20220101</date></cpc-version-indicator>
<section>G</section>
<class>06</class>
<subclass>V</subclass>
<main-group>20</main-group>
<subgroup>68</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
<scheme-origination-code>C</scheme-origination-code>
</classification-cpc>
<classification-cpc>
<cpc-version-indicator><date>20220101</date></cpc-version-indicator>
<section>G</section>
<class>06</class>
<subclass>V</subclass>
<main-group>20</main-group>
<subgroup>188</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
<scheme-origination-code>C</scheme-origination-code>
</classification-cpc>
<classification-cpc>
<cpc-version-indicator><date>20230101</date></cpc-version-indicator>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>18</main-group>
<subgroup>24317</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
<scheme-origination-code>C</scheme-origination-code>
</classification-cpc>
<classification-cpc>
<cpc-version-indicator><date>20230101</date></cpc-version-indicator>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>18</main-group>
<subgroup>214</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
<scheme-origination-code>C</scheme-origination-code>
</classification-cpc>
<classification-cpc>
<cpc-version-indicator><date>20230101</date></cpc-version-indicator>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>18</main-group>
<subgroup>254</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
<scheme-origination-code>C</scheme-origination-code>
</classification-cpc>
<classification-cpc>
<cpc-version-indicator><date>20230101</date></cpc-version-indicator>
<section>G</section>
<class>06</class>
<subclass>N</subclass>
<main-group>3</main-group>
<subgroup>045</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
<scheme-origination-code>C</scheme-origination-code>
</classification-cpc>
<classification-cpc>
<cpc-version-indicator><date>20220101</date></cpc-version-indicator>
<section>G</section>
<class>06</class>
<subclass>V</subclass>
<main-group>10</main-group>
<subgroup>764</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
<scheme-origination-code>C</scheme-origination-code>
</classification-cpc>
<classification-cpc>
<cpc-version-indicator><date>20220101</date></cpc-version-indicator>
<section>G</section>
<class>06</class>
<subclass>V</subclass>
<main-group>20</main-group>
<subgroup>60</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
<scheme-origination-code>C</scheme-origination-code>
</classification-cpc>
<classification-cpc>
<cpc-version-indicator><date>20130101</date></cpc-version-indicator>
<section>A</section>
<class>01</class>
<subclass>G</subclass>
<main-group>7</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>A</classification-value>
<action-date><date>20230720</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
<scheme-origination-code>C</scheme-origination-code>
</classification-cpc>
</further-cpc>
</classifications-cpc>
<invention-title id="d2e43">DETECTION OF PLANT DISEASES WITH MULTI-STAGE, MULTI-SCALE DEEP LEARNING</invention-title>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>17567635</doc-number>
<date>20220103</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>11615276</doc-number>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>18190358</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>16928857</doc-number>
<date>20200714</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>11216702</doc-number>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>17567635</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>16662017</doc-number>
<date>20191023</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>10713542</doc-number>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>16928857</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>62750143</doc-number>
<date>20181024</date>
</document-id>
</us-provisional-application>
</us-related-documents>
<us-parties>
<us-applicants>
<us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee">
<addressbook>
<orgname>CLIMATE LLC</orgname>
<address>
<city>Saint Louis</city>
<state>MO</state>
<country>US</country>
</address>
</addressbook>
<residence>
<country>US</country>
</residence>
</us-applicant>
</us-applicants>
<inventors>
<inventor sequence="00" designation="us-only">
<addressbook>
<last-name>Guan</last-name>
<first-name>Wei</first-name>
<address>
<city>Pleasanton</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
<inventor sequence="01" designation="us-only">
<addressbook>
<last-name>Gui</last-name>
<first-name>Yichuan</first-name>
<address>
<city>Pacifica</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</inventor>
</inventors>
</us-parties>
</us-bibliographic-data-application>
<abstract id="abstract">
<p id="p-0001" num="0000">A computer system is provided comprising a classification model management server computer configured, by instructions, to: receive a new image from a user device; apply a first digital model to first regions within the new image for classifying each of the first regions into a particular class; apply a second digital model to second regions within the new image for classifying each of the second regions into a particular class; and transmit classification data related to the class of the first regions and the class of the second regions to the user device. In connection therewith, the second regions each generally correspond to a combination of multiple first regions.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="151.55mm" wi="108.88mm" file="US20230225239A1-20230720-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="203.71mm" wi="128.44mm" file="US20230225239A1-20230720-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="128.19mm" wi="96.52mm" file="US20230225239A1-20230720-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="216.15mm" wi="146.81mm" orientation="landscape" file="US20230225239A1-20230720-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="201.34mm" wi="116.50mm" orientation="landscape" file="US20230225239A1-20230720-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="210.23mm" wi="125.31mm" orientation="landscape" file="US20230225239A1-20230720-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="183.13mm" wi="144.10mm" orientation="landscape" file="US20230225239A1-20230720-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="188.21mm" wi="144.78mm" orientation="landscape" file="US20230225239A1-20230720-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="197.53mm" wi="127.00mm" orientation="landscape" file="US20230225239A1-20230720-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="204.05mm" wi="114.30mm" orientation="landscape" file="US20230225239A1-20230720-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="203.45mm" wi="119.46mm" orientation="landscape" file="US20230225239A1-20230720-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="195.83mm" wi="160.27mm" orientation="landscape" file="US20230225239A1-20230720-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application is a continuation of U.S. patent application Ser. No. 17/567,635, filed Jan. 3, 2022, which is a continuation of U.S. patent application Ser. No. 16/928,857, filed Jul. 14, 2020, which is a continuation of U.S. patent application Ser. No. 16/662,017, filed Oct. 23, 2019, which claims the benefit of, and priority to, U.S. Provisional Application No. 62/750,143, filed Oct. 24, 2018. The entire disclosure of each of the above applications is incorporated herein by reference.</p>
<?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?>
<?summary-of-invention description="Summary of Invention" end="lead"?>
<heading id="h-0002" level="1">COPYRIGHT NOTICE</heading>
<p id="p-0003" num="0002">A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyright or rights whatsoever. &#xa9; 2015-2020 The Climate Corporation.</p>
<heading id="h-0003" level="1">FIELD</heading>
<p id="p-0004" num="0003">The present disclosure relates to the technical areas of plant disease detection and machine learning. The present disclosure also relates to the technical area of processing images at different scales to recognize diseases having symptoms of different sizes.</p>
<heading id="h-0004" level="1">BACKGROUND</heading>
<p id="p-0005" num="0004">The approaches described in this section are approaches that could be pursued, but not necessarily approaches that have been previously conceived or pursued. Therefore, unless otherwise indicated, it should not be assumed that any of the approaches described in this section qualify as prior art merely by virtue of their inclusion in this section.</p>
<p id="p-0006" num="0005">Plant disease detection is important in agriculture. Today an automated approach often involves classifying plant photos by learning from sample photos. Each photo can show a leaf having disease symptoms. Sometimes, these symptoms are caused by multiple diseases. Sometimes, these symptoms have different sizes or overlap one another. It would be helpful to have an efficient and accurate approach of recognizing the plant diseases infecting the leaf from such a photo without requiring as samples a large number of photos showing various symptoms of these plant diseases.</p>
<heading id="h-0005" level="1">SUMMARY</heading>
<p id="p-0007" num="0006">The appended claims may serve as a summary of the disclosure.</p>
<?summary-of-invention description="Summary of Invention" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0006" level="1">DRAWINGS</heading>
<p id="p-0008" num="0007">In the drawings:</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an example computer system that is configured to perform the functions described herein, shown in a field environment with other apparatus with which the system may interoperate.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates two views of an example logical organization of sets of instructions in main memory when an example mobile application is loaded for execution.</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a programmed process by which the agricultural intelligence computer system generates one or more preconfigured agronomic models using agronomic data provided by one or more data sources.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a block diagram that illustrates a computer system upon which an embodiment of the invention may be implemented.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>5</b></figref> depicts an example embodiment of a timeline view for data entry.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>6</b></figref> depicts an example embodiment of a spreadsheet view for data entry.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>7</b>A</figref> illustrates an example approach of extracting sample images from a photo showing symptoms of a plant disease that are relatively small.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>7</b>B</figref> illustrates an example approach of extracting sample images from a photo showing symptoms of a plant disease that are relatively large.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates an example process of recognizing plant diseases having multi-sized symptoms from a plant image using multiple digital models.</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>9</b>A</figref> illustrates an example prediction map showing results of applying a first digital model to a plant image to recognize plant diseases having relatively small symptoms.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>9</b>B</figref> illustrates an example prediction map showing results of applying a second digital model to a plant image to recognize plant diseases having relatively large symptoms.</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>10</b></figref> illustrates an example method performed by a server computer that is programmed for recognizing plant diseases having multi-sized symptoms from a plant image.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?detailed-description description="Detailed Description" end="lead"?>
<heading id="h-0007" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0021" num="0020">In the following description, for the purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the present disclosure. It will be apparent, however, that embodiments may be practiced without these specific details. In other instances, well-known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the present disclosure. Embodiments are disclosed in sections according to the following outline:
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0000">
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0021">1. GENERAL OVERVIEW</li>
        <li id="ul0002-0002" num="0022">2. EXAMPLE AGRICULTURAL INTELLIGENCE COMPUTER SYSTEM</li>
        <li id="ul0002-0003" num="0023">2.1. STRUCTURAL OVERVIEW</li>
        <li id="ul0002-0004" num="0024">2.2. APPLICATION PROGRAM OVERVIEW</li>
        <li id="ul0002-0005" num="0025">2.3. DATA INGEST TO THE COMPUTER SYSTEM</li>
        <li id="ul0002-0006" num="0026">2.4. PROCESS OVERVIEW&#x2014;AGRONOMIC MODEL TRAINING</li>
        <li id="ul0002-0007" num="0027">2.5. IMPLEMENTATION EXAMPLE&#x2014;HARDWARE OVERVIEW</li>
        <li id="ul0002-0008" num="0028">3. FUNCTIONAL DESCRIPTIONS</li>
        <li id="ul0002-0009" num="0029">3.1 TRAINING SET AND DIGITAL MODEL CONSTRUCTION</li>
        <li id="ul0002-0010" num="0030">3.2 DIGITAL MODEL EXECUTION</li>
        <li id="ul0002-0011" num="0031">3.3 EXAMPLE PROCESSES</li>
        <li id="ul0002-0012" num="0032">4. EXTENSIONS AND ALTERNATIVES</li>
    </ul>
    </li>
</ul>
</p>
<heading id="h-0008" level="2">1. General Overview</heading>
<p id="p-0022" num="0033">A system for recognizing plant diseases producing multi-sized symptoms from a plant photo is disclosed. In some embodiments, the system is programmed to build from multiple training sets multiple digital models, each for recognizing plant diseases having symptoms of similar sizes. Each digital model can be implemented with a deep learning architecture, such as a convolutional neural network (CNN), that classifies an image into one of several classes. For each training set, the system is thus programmed to collect images showing symptoms of one or more plant diseases having similar sizes. These images are then assigned to multiple disease classes. For a first one of the training sets used to build the first digital model, the system is programmed to also include images that correspond to a healthy condition and images of symptoms having other sizes. These images are then assigned to a no-disease class and a catch-all class. Given a new image from a user device, the system is programmed to then first apply the first digital model. For at least the portions of the new image that are classified by the first digital model into the catch-all class, the system is programmed to then apply another one of the digital models. The system is programmed to finally transmit classification data to the user device indicating how each portion of the new image is classified into a class corresponding to a plant disease or no plant disease at all.</p>
<p id="p-0023" num="0034">In some embodiments, the plant is corn. Each image can be a digital image and is typically a photo showing a corn leaf infected with one or more diseases. The system can be programmed to build two digital models, a first one for recognizing those corn diseases producing relatively small symptoms, and a second one for recognizing those corn diseases producing relatively large symptoms.</p>
<p id="p-0024" num="0035">In some embodiments, for the first training set for building the first digital model, the system can be configured to include photos showing mainly symptoms of those diseases having relatively small symptoms. These photos would thus have relatively small sizes. Alternatively, the system can be configured to include scaled versions of these photos corresponding to similar field of views as the originals but having a fixed size. The system can be configured to also include photos corresponding to similar field of views but showing no symptoms or showing symptoms of those diseases having relatively large symptoms. Therefore, the first digital model is designed to classify a corn image into a class corresponding to one of those corn diseases having relatively small symptoms or a healthy condition or a catch-all class corresponding to a combination of those corn diseases having relatively large symptoms.</p>
<p id="p-0025" num="0036">In some embodiments, for the second training set for building the second digital model, the system can be configured to include photos showing mainly symptoms of those diseases having relatively large symptoms. These photos would thus have relatively large sizes. Alternatively, the system can be configured to include scaled versions of these photos corresponding to similar field of views as the originals but having a fixed size. Therefore, the second digital model is designed to classify a corn image into a class corresponding to one of those corn diseases having relatively large symptoms. The system can be programmed to build the first digital model and the second digital model as CNNs respectively from the first training set and the second training set.</p>
<p id="p-0026" num="0037">In some embodiments, the system is programmed to receive a new image, such as a new photo of an infected corn leaf, from a user device and apply the digital models to the new image. Specifically, the system is programmed to first apply the first digital model to the new image to classify each first region within the new image into one of the classes corresponding to corn diseases having relatively small symptoms, a healthy condition, or the combination of corn diseases having relatively large symptoms. The system is programmed to next apply the second digital model to each second region within the combination of first regions that have been classified into the catch-all class into one of the classes corresponding to corn diseases having relatively large symptoms. The second region is typically larger than first region corresponding to a larger symptom or a larger field of view. The system can be programmed to then send classification data related to how each first region or second region is classified into one of the classes corresponding to corn diseases or the healthy condition to the user device.</p>
<p id="p-0027" num="0038">The system produces various technical benefits. The system allows detection of multiple plant diseases from one plant image. The system also allows detection of one plant disease having relatively small symptoms even when such symptoms overlap with relatively large symptoms of another plant disease. In addition, the system also allows detection of plant diseases having multi-sized symptoms from one plant image. More specifically, the system enables association of each of a plurality of regions within a plant with one of a plurality of plant diseases or a healthy class, even when the diseases symptoms have different sizes. Furthermore, the multi-stage approach where different digital models designed to identify separate groups of symptoms are sequentially applied achieves accuracy while requiring relatively few sample images compared to the one-stage approach of detect different groups of symptoms at once. In particular, the multi-stage approach can utilize multiple images extracted from an image used to train the one-stage approach, with the image showing multiple groups of symptoms and each extracted image showing symptoms of only one of the groups.</p>
<p id="p-0028" num="0039">Other aspects and features of embodiments will become apparent from other sections of the disclosure.</p>
<heading id="h-0009" level="2">2. Example Agricultural Intelligence Computer System</heading>
<heading id="h-0010" level="2">2.1. Structural Overview</heading>
<p id="p-0029" num="0040"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an example computer system that is configured to perform the functions described herein, shown in a field environment with other apparatus with which the system may interoperate. In one embodiment, a user <b>102</b> owns, operates or possesses a field manager computing device <b>104</b> in a field location or associated with a field location such as a field intended for agricultural activities or a management location for one or more agricultural fields. The field manager computer device <b>104</b> is programmed or configured to provide field data <b>106</b> to an agricultural intelligence computer system <b>130</b> via one or more networks <b>109</b>.</p>
<p id="p-0030" num="0041">Examples of field data <b>106</b> include (a) identification data (for example, acreage, field name, field identifiers, geographic identifiers, boundary identifiers, crop identifiers, and any other suitable data that may be used to identify farm land, such as a common land unit (CLU), lot and block number, a parcel number, geographic coordinates and boundaries, Farm Serial Number (FSN), farm number, tract number, field number, section, township, and/or range), (b) harvest data (for example, crop type, crop variety, crop rotation, whether the crop is grown organically, harvest date, Actual Production History (APH), expected yield, yield, crop price, crop revenue, grain moisture, tillage practice, and previous growing season information), (c) soil data (for example, type, composition, pH, organic matter (OM), cation exchange capacity (CEC)), (d) planting data (for example, planting date, seed(s) type, relative maturity (RM) of planted seed(s), seed population), (e) fertilizer data (for example, nutrient type (Nitrogen, Phosphorous, Potassium), application type, application date, amount, source, method), (f) chemical application data (for example, pesticide, herbicide, fungicide, other substance or mixture of substances intended for use as a plant regulator, defoliant, or desiccant, application date, amount, source, method), (g) irrigation data (for example, application date, amount, source, method), (h) weather data (for example, precipitation, rainfall rate, predicted rainfall, water runoff rate region, temperature, wind, forecast, pressure, visibility, clouds, heat index, dew point, humidity, snow depth, air quality, sunrise, sunset), (i) imagery data (for example, imagery and light spectrum information from an agricultural apparatus sensor, camera, computer, smartphone, tablet, unmanned aerial vehicle, planes or satellite), (j) scouting observations (photos, videos, free form notes, voice recordings, voice transcriptions, weather conditions (temperature, precipitation (current and over time), soil moisture, crop growth stage, wind velocity, relative humidity, dew point, black layer)), and (k) soil, seed, crop phenology, pest and disease reporting, and predictions sources and databases.</p>
<p id="p-0031" num="0042">A data server computer <b>108</b> is communicatively coupled to agricultural intelligence computer system <b>130</b> and is programmed or configured to send external data <b>110</b> to agricultural intelligence computer system <b>130</b> via the network(s) <b>109</b>. The external data server computer <b>108</b> may be owned or operated by the same legal person or entity as the agricultural intelligence computer system <b>130</b>, or by a different person or entity such as a government agency, non-governmental organization (NGO), and/or a private data service provider. Examples of external data include weather data, imagery data, soil data, or statistical data relating to crop yields, among others. External data <b>110</b> may consist of the same type of information as field data <b>106</b>. In some embodiments, the external data <b>110</b> is provided by an external data server <b>108</b> owned by the same entity that owns and/or operates the agricultural intelligence computer system <b>130</b>. For example, the agricultural intelligence computer system <b>130</b> may include a data server focused exclusively on a type of data that might otherwise be obtained from third party sources, such as weather data. In some embodiments, an external data server <b>108</b> may actually be incorporated within the system <b>130</b>.</p>
<p id="p-0032" num="0043">An agricultural apparatus <b>111</b> may have one or more remote sensors <b>112</b> fixed thereon, which sensors are communicatively coupled either directly or indirectly via agricultural apparatus <b>111</b> to the agricultural intelligence computer system <b>130</b> and are programmed or configured to send sensor data to agricultural intelligence computer system <b>130</b>. Examples of agricultural apparatus <b>111</b> include tractors, combines, harvesters, planters, trucks, fertilizer equipment, aerial vehicles including unmanned aerial vehicles, and any other item of physical machinery or hardware, typically mobile machinery, and which may be used in tasks associated with agriculture. In some embodiments, a single unit of apparatus <b>111</b> may comprise a plurality of sensors <b>112</b> that are coupled locally in a network on the apparatus; controller area network (CAN) is example of such a network that can be installed in combines, harvesters, sprayers, and cultivators. Application controller <b>114</b> is communicatively coupled to agricultural intelligence computer system <b>130</b> via the network(s) <b>109</b> and is programmed or configured to receive one or more scripts that are used to control an operating parameter of an agricultural vehicle or implement from the agricultural intelligence computer system <b>130</b>. For instance, a controller area network (CAN) bus interface may be used to enable communications from the agricultural intelligence computer system <b>130</b> to the agricultural apparatus <b>111</b>, such as how the CLIMATE FIELDVIEW DRIVE, available from The Climate Corporation, San Francisco, California, is used. Sensor data may consist of the same type of information as field data <b>106</b>. In some embodiments, remote sensors <b>112</b> may not be fixed to an agricultural apparatus <b>111</b> but may be remotely located in the field and may communicate with network <b>109</b>.</p>
<p id="p-0033" num="0044">The apparatus <b>111</b> may comprise a cab computer <b>115</b> that is programmed with a cab application, which may comprise a version or variant of the mobile application for device <b>104</b> that is further described in other sections herein. In an embodiment, cab computer <b>115</b> comprises a compact computer, often a tablet-sized computer or smartphone, with a graphical screen display, such as a color display, that is mounted within an operator's cab of the apparatus <b>111</b>. Cab computer <b>115</b> may implement some or all of the operations and functions that are described further herein for the mobile computer device <b>104</b>.</p>
<p id="p-0034" num="0045">The network(s) <b>109</b> broadly represent any combination of one or more data communication networks including local area networks, wide area networks, internetworks or internets, using any of wireline or wireless links, including terrestrial or satellite links. The network(s) may be implemented by any medium or mechanism that provides for the exchange of data between the various elements of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. The various elements of <figref idref="DRAWINGS">FIG. <b>1</b></figref> may also have direct (wired or wireless) communications links. The sensors <b>112</b>, controller <b>114</b>, external data server computer <b>108</b>, and other elements of the system each comprise an interface compatible with the network(s) <b>109</b> and are programmed or configured to use standardized protocols for communication across the networks such as TCP/IP, Bluetooth, CAN protocol and higher-layer protocols such as HTTP, TLS, and the like.</p>
<p id="p-0035" num="0046">Agricultural intelligence computer system <b>130</b> is programmed or configured to receive field data <b>106</b> from field manager computing device <b>104</b>, external data <b>110</b> from external data server computer <b>108</b>, and sensor data from remote sensor <b>112</b>. Agricultural intelligence computer system <b>130</b> may be further configured to host, use or execute one or more computer programs, other software elements, digitally programmed logic such as FPGAs or ASICs, or any combination thereof to perform translation and storage of data values, construction of digital models of one or more crops on one or more fields, generation of recommendations and notifications, and generation and sending of scripts to application controller <b>114</b>, in the manner described further in other sections of this disclosure.</p>
<p id="p-0036" num="0047">In an embodiment, agricultural intelligence computer system <b>130</b> is programmed with or comprises a communication layer <b>132</b>, presentation layer <b>134</b>, data management layer <b>140</b>, hardware/virtualization layer <b>150</b>, and model and field data repository <b>160</b>. &#x201c;Layer,&#x201d; in this context, refers to any combination of electronic digital interface circuits, microcontrollers, firmware such as drivers, and/or computer programs or other software elements.</p>
<p id="p-0037" num="0048">Communication layer <b>132</b> may be programmed or configured to perform input/output interfacing functions including sending requests to field manager computing device <b>104</b>, external data server computer <b>108</b>, and remote sensor <b>112</b> for field data, external data, and sensor data respectively. Communication layer <b>132</b> may be programmed or configured to send the received data to model and field data repository <b>160</b> to be stored as field data <b>106</b>.</p>
<p id="p-0038" num="0049">Presentation layer <b>134</b> may be programmed or configured to generate a graphical user interface (GUI) to be displayed on field manager computing device <b>104</b>, cab computer <b>115</b> or other computers that are coupled to the system <b>130</b> through the network <b>109</b>. The GUI may comprise controls for inputting data to be sent to agricultural intelligence computer system <b>130</b>, generating requests for models and/or recommendations, and/or displaying recommendations, notifications, models, and other field data.</p>
<p id="p-0039" num="0050">Data management layer <b>140</b> may be programmed or configured to manage read operations and write operations involving the repository <b>160</b> and other functional elements of the system, including queries and result sets communicated between the functional elements of the system and the repository. Examples of data management layer <b>140</b> include JDBC, SQL server interface code, and/or HADOOP interface code, among others. Repository <b>160</b> may comprise a database. As used herein, the term &#x201c;database&#x201d; may refer to either a body of data, a relational database management system (RDBMS), or to both. As used herein, a database may comprise any collection of data including hierarchical databases, relational databases, flat file databases, object-relational databases, object oriented databases, distributed databases, and any other structured collection of records or data that is stored in a computer system. Examples of RDBMS's include, but are not limited to including, ORACLE&#xae;, MYSQL, IBM&#xae; DB2, MICROSOFT&#xae; SQL SERVER, SYBASE&#xae;, and POSTGRESQL databases. However, any database may be used that enables the systems and methods described herein.</p>
<p id="p-0040" num="0051">When field data <b>106</b> is not provided directly to the agricultural intelligence computer system via one or more agricultural machines or agricultural machine devices that interacts with the agricultural intelligence computer system, the user may be prompted via one or more user interfaces on the user device (served by the agricultural intelligence computer system) to input such information. In an example embodiment, the user may specify identification data by accessing a map on the user device (served by the agricultural intelligence computer system) and selecting specific CLUs that have been graphically shown on the map. In an alternative embodiment, the user <b>102</b> may specify identification data by accessing a map on the user device (served by the agricultural intelligence computer system <b>130</b>) and drawing boundaries of the field over the map. Such CLU selection or map drawings represent geographic identifiers. In alternative embodiments, the user may specify identification data by accessing field identification data (provided as shape files or in a similar format) from the U. S. Department of Agriculture Farm Service Agency or other source via the user device and providing such field identification data to the agricultural intelligence computer system.</p>
<p id="p-0041" num="0052">In an example embodiment, the agricultural intelligence computer system <b>130</b> is programmed to generate and cause displaying a graphical user interface comprising a data manager for data input. After one or more fields have been identified using the methods described above, the data manager may provide one or more graphical user interface widgets which when selected can identify changes to the field, soil, crops, tillage, or nutrient practices. The data manager may include a timeline view, a spreadsheet view, and/or one or more editable programs.</p>
<p id="p-0042" num="0053"><figref idref="DRAWINGS">FIG. <b>5</b></figref> depicts an example embodiment of a timeline view for data entry. Using the display depicted in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, a user computer can input a selection of a particular field and a particular date for the addition of event. Events depicted at the top of the timeline may include Nitrogen, Planting, Practices, and Soil. To add a nitrogen application event, a user computer may provide input to select the nitrogen tab. The user computer may then select a location on the timeline for a particular field in order to indicate an application of nitrogen on the selected field. In response to receiving a selection of a location on the timeline for a particular field, the data manager may display a data entry overlay, allowing the user computer to input data pertaining to nitrogen applications, planting procedures, soil application, tillage procedures, irrigation practices, or other information relating to the particular field. For example, if a user computer selects a portion of the timeline and indicates an application of nitrogen, then the data entry overlay may include fields for inputting an amount of nitrogen applied, a date of application, a type of fertilizer used, and any other information related to the application of nitrogen.</p>
<p id="p-0043" num="0054">In an embodiment, the data manager provides an interface for creating one or more programs. &#x201c;Program,&#x201d; in this context, refers to a set of data pertaining to nitrogen applications, planting procedures, soil application, tillage procedures, irrigation practices, or other information that may be related to one or more fields, and that can be stored in digital data storage for reuse as a set in other operations. After a program has been created, it may be conceptually applied to one or more fields and references to the program may be stored in digital storage in association with data identifying the fields. Thus, instead of manually entering identical data relating to the same nitrogen applications for multiple different fields, a user computer may create a program that indicates a particular application of nitrogen and then apply the program to multiple different fields. For example, in the timeline view of <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the top two timelines have the &#x201c;Spring applied&#x201d; program selected, which includes an application of 150 lbs N/ac in early April. The data manager may provide an interface for editing a program. In an embodiment, when a particular program is edited, each field that has selected the particular program is edited. For example, in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, if the &#x201c;Spring applied&#x201d; program is edited to reduce the application of nitrogen to 130 lbs N/ac, the top two fields may be updated with a reduced application of nitrogen based on the edited program.</p>
<p id="p-0044" num="0055">In an embodiment, in response to receiving edits to a field that has a program selected, the data manager removes the correspondence of the field to the selected program. For example, if a nitrogen application is added to the top field in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the interface may update to indicate that the &#x201c;Spring applied&#x201d; program is no longer being applied to the top field. While the nitrogen application in early April may remain, updates to the &#x201c;Spring applied&#x201d; program would not alter the April application of nitrogen.</p>
<p id="p-0045" num="0056"><figref idref="DRAWINGS">FIG. <b>6</b></figref> depicts an example embodiment of a spreadsheet view for data entry. Using the display depicted in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, a user can create and edit information for one or more fields. The data manager may include spreadsheets for inputting information with respect to Nitrogen, Planting, Practices, and Soil as depicted in <figref idref="DRAWINGS">FIG. <b>6</b></figref>. To edit a particular entry, a user computer may select the particular entry in the spreadsheet and update the values. For example,</p>
<p id="p-0046" num="0057"><figref idref="DRAWINGS">FIG. <b>6</b></figref> depicts an in-progress update to a target yield value for the second field. Additionally, a user computer may select one or more fields in order to apply one or more programs. In response to receiving a selection of a program for a particular field, the data manager may automatically complete the entries for the particular field based on the selected program. As with the timeline view, the data manager may update the entries for each field associated with a particular program in response to receiving an update to the program. Additionally, the data manager may remove the correspondence of the selected program to the field in response to receiving an edit to one of the entries for the field.</p>
<p id="p-0047" num="0058">In an embodiment, model and field data is stored in model and field data repository <b>160</b>. Model data comprises data models created for one or more fields. For example, a crop model may include a digitally constructed model of the development of a crop on the one or more fields. &#x201c;Model,&#x201d; in this context, refers to an electronic digitally stored set of executable instructions and data values, associated with one another, which are capable of receiving and responding to a programmatic or other digital call, invocation, or request for resolution based upon specified input values, to yield one or more stored or calculated output values that can serve as the basis of computer-implemented recommendations, output data displays, or machine control, among other things. Persons of skill in the field find it convenient to express models using mathematical equations, but that form of expression does not confine the models disclosed herein to abstract concepts; instead, each model herein has a practical application in a computer in the form of stored executable instructions and data that implement the model using the computer. The model may include a model of past events on the one or more fields, a model of the current status of the one or more fields, and/or a model of predicted events on the one or more fields. Model and field data may be stored in data structures in memory, rows in a database table, in flat files or spreadsheets, or other forms of stored digital data.</p>
<p id="p-0048" num="0059">In an embodiment, agricultural intelligence computer system <b>130</b> is programmed to comprise a classification model management server computer (server) <b>170</b>. The server <b>170</b> is further configured to comprise model construction instructions <b>174</b>, model execution instructions <b>176</b>, and user interface instructions <b>178</b>.</p>
<p id="p-0049" num="0060">In some embodiments, the model construction instructions <b>174</b> offer computer-executable instructions to assemble training sets and build digital models from the training sets for recognizing plant diseases having multi-sized symptoms from a plant image.</p>
<p id="p-0050" num="0061">Each digital model is designed to recognize plant diseases having similar-sized symptoms. Therefore, each training set includes images corresponding to a distinct field of view or a distinctly sized area within a plant leaf. The model configuration instructions <b>172</b> offer computer-executable instructions to specifically split given images with a sliding window into individual regions for the training sets. Each digital model can be implemented with a deep learning architecture that classifies a new image into one of a plurality of classes, each corresponding to a plant disease, a healthy condition, or a catch-call combination of multiple plant diseases.</p>
<p id="p-0051" num="0062">In some embodiments, the model execution instructions <b>176</b> offer computer-executable instructions to apply the digital models to new images for classification. Each new image can be a new plant photo showing multi-sized symptoms of one or more plant diseases. A first digital model for recognizing a first group of diseases having symptoms sized within a first distinct range is applied to the new image. More specifically, the new image can be scaled as necessary and different first regions of the new image can be classified with the first digital model into a class corresponding to one of the first group of plant diseases, a healthy condition, or a catch-all class for all other plant diseases. The size of each first region would correlate with the sizes in the first distinct range. Next, a second digital model for recognizing a second group of diseases having symptoms sized within a second distinct range is applied to the combination of first regions classified into the catch-all class. The remaining process related to the first digital model can similarly be performed with the second digital model or additional digital models until every area of the new image is classified into at least one class corresponding to one of the plant diseases.</p>
<p id="p-0052" num="0063">In some embodiments, the user interface instructions <b>178</b> offer computer-executable instructions to manage communications with other devices. The communications may include receiving initial image data for training purposes from an image source, receiving a new photo for classification from a user device, sending classification results for the new photo to the user device, or sending the digital models to another computing device.</p>
<p id="p-0053" num="0064">Each component of the server <b>170</b> comprises a set of one or more pages of main memory, such as RAM, in the agricultural intelligence computer system <b>130</b> into which executable instructions have been loaded and which when executed cause the agricultural intelligence computing system to perform the functions or operations that are described herein with reference to those modules. For example, the model construction module <b>174</b> may comprise a set of pages in RAM that contain instructions which when executed cause performing the location selection functions that are described herein. The instructions may be in machine executable code in the instruction set of a CPU and may have been compiled based upon source code written in JAVA, C, C++, OBJECTIVE-C, or any other human-readable programming language or environment, alone or in combination with scripts in JAVASCRIPT, other scripting languages and other programming source text. The term &#x201c;pages&#x201d; is intended to refer broadly to any region within main memory and the specific terminology used in a system may vary depending on the memory architecture or processor architecture. In another embodiment, each component of the server <b>170</b> also may represent one or more files or projects of source code that are digitally stored in a mass storage device such as non-volatile RAM or disk storage, in the agricultural intelligence computer system <b>130</b> or a separate repository system, which when compiled or interpreted cause generating executable instructions which when executed cause the agricultural intelligence computing system to perform the functions or operations that are described herein with reference to those modules. In other words, the drawing figure may represent the manner in which programmers or software developers organize and arrange source code for later compilation into an executable, or interpretation into bytecode or the equivalent, for execution by the agricultural intelligence computer system <b>130</b>.</p>
<p id="p-0054" num="0065">Hardware/virtualization layer <b>150</b> comprises one or more central processing units (CPUs), memory controllers, and other devices, components, or elements of a computer system such as volatile or non-volatile memory, non-volatile storage such as disk, and I/O devices or interfaces as illustrated and described, for example, in connection with <figref idref="DRAWINGS">FIG. <b>4</b></figref>. The layer <b>150</b> also may comprise programmed instructions that are configured to support virtualization, containerization, or other technologies.</p>
<p id="p-0055" num="0066">For purposes of illustrating a clear example, <figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a limited number of instances of certain functional elements. However, in other embodiments, there may be any number of such elements. For example, embodiments may use thousands or millions of different mobile computing devices <b>104</b> associated with different users. Further, the system <b>130</b> and/or external data server computer <b>108</b> may be implemented using two or more processors, cores, clusters, or instances of physical machines or virtual machines, configured in a discrete location or co-located with other elements in a datacenter, shared computing facility or cloud computing facility.</p>
<heading id="h-0011" level="2">2.2. Application Program Overview</heading>
<p id="p-0056" num="0067">In an embodiment, the implementation of the functions described herein using one or more computer programs or other software elements that are loaded into and executed using one or more general-purpose computers will cause the general-purpose computers to be configured as a particular machine or as a computer that is specially adapted to perform the functions described herein. Further, each of the flow diagrams that are described further herein may serve, alone or in combination with the descriptions of processes and functions in prose herein, as algorithms, plans or directions that may be used to program a computer or logic to implement the functions that are described. In other words, all the prose text herein, and all the drawing figures, together are intended to provide disclosure of algorithms, plans or directions that are sufficient to permit a skilled person to program a computer to perform the functions that are described herein, in combination with the skill and knowledge of such a person given the level of skill that is appropriate for inventions and disclosures of this type.</p>
<p id="p-0057" num="0068">In an embodiment, user <b>102</b> interacts with agricultural intelligence computer system <b>130</b> using field manager computing device <b>104</b> configured with an operating system and one or more application programs or apps; the field manager computing device <b>104</b> also may interoperate with the agricultural intelligence computer system independently and automatically under program control or logical control and direct user interaction is not always required. Field manager computing device <b>104</b> broadly represents one or more of a smart phone, PDA, tablet computing device, laptop computer, desktop computer, workstation, or any other computing device capable of transmitting and receiving information and performing the functions described herein. Field manager computing device <b>104</b> may communicate via a network using a mobile application stored on field manager computing device <b>104</b>, and in some embodiments, the device may be coupled using a cable <b>113</b> or connector to the sensor <b>112</b> and/or controller <b>114</b>. A particular user <b>102</b> may own, operate or possess and use, in connection with system <b>130</b>, more than one field manager computing device <b>104</b> at a time.</p>
<p id="p-0058" num="0069">The mobile application may provide client-side functionality, via the network to one or more mobile computing devices. In an example embodiment, field manager computing device <b>104</b> may access the mobile application via a web browser or a local client application or app. Field manager computing device <b>104</b> may transmit data to, and receive data from, one or more front-end servers, using web-based protocols or formats such as HTTP, XML and/or JSON, or app-specific protocols. In an example embodiment, the data may take the form of requests and user information input, such as field data, into the mobile computing device. In some embodiments, the mobile application interacts with location tracking hardware and software on field manager computing device <b>104</b> which determines the location of field manager computing device <b>104</b> using standard tracking techniques such as multilateration of radio signals, the global positioning system (GPS), WiFi positioning systems, or other methods of mobile positioning. In some cases, location data or other data associated with the device <b>104</b>, user <b>102</b>, and/or user account(s) may be obtained by queries to an operating system of the device or by requesting an app on the device to obtain data from the operating system.</p>
<p id="p-0059" num="0070">In an embodiment, field manager computing device <b>104</b> sends field data <b>106</b> to agricultural intelligence computer system <b>130</b> comprising or including, but not limited to, data values representing one or more of: a geographical location of the one or more fields, tillage information for the one or more fields, crops planted in the one or more fields, and soil data extracted from the one or more fields. Field manager computing device <b>104</b> may send field data <b>106</b> in response to user input from user <b>102</b> specifying the data values for the one or more fields. Additionally, field manager computing device <b>104</b> may automatically send field data <b>106</b> when one or more of the data values becomes available to field manager computing device <b>104</b>. For example, field manager computing device <b>104</b> may be communicatively coupled to remote sensor <b>112</b> and/or application controller <b>114</b> which include an irrigation sensor and/or irrigation controller. In response to receiving data indicating that application controller <b>114</b> released water onto the one or more fields, field manager computing device <b>104</b> may send field data <b>106</b> to agricultural intelligence computer system <b>130</b> indicating that water was released on the one or more fields. Field data <b>106</b> identified in this disclosure may be input and communicated using electronic digital data that is communicated between computing devices using parameterized URLs over HTTP, or another suitable communication or messaging protocol.</p>
<p id="p-0060" num="0071">A commercial example of the mobile application is CLIMATE FIELDVIEW, commercially available from The Climate Corporation, San Francisco, California. The CLIMATE FIELDVIEW application, or other applications, may be modified, extended, or adapted to include features, functions, and programming that have not been disclosed earlier than the filing date of this disclosure. In one embodiment, the mobile application comprises an integrated software platform that allows a grower to make fact-based decisions for their operation because it combines historical data about the grower's fields with any other data that the grower wishes to compare. The combinations and comparisons may be performed in real time and are based upon scientific models that provide potential scenarios to permit the grower to make better, more informed decisions.</p>
<p id="p-0061" num="0072"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates two views of an example logical organization of sets of instructions in main memory when an example mobile application is loaded for execution. In <figref idref="DRAWINGS">FIG. <b>2</b></figref>, each named element represents a region of one or more pages of RAM or other main memory, or one or more blocks of disk storage or other non-volatile storage, and the programmed instructions within those regions. In one embodiment, in view (a), a mobile computer application <b>200</b> comprises account-fields-data ingestion-sharing instructions <b>202</b>, overview and alert instructions <b>204</b>, digital map book instructions <b>206</b>, seeds and planting instructions <b>208</b>, nitrogen instructions <b>210</b>, weather instructions <b>212</b>, field health instructions <b>214</b>, and performance instructions <b>216</b>.</p>
<p id="p-0062" num="0073">In one embodiment, a mobile computer application <b>200</b> comprises account, fields, data ingestion, sharing instructions <b>202</b> which are programmed to receive, translate, and ingest field data from third party systems via manual upload or APIs. Data types may include field boundaries, yield maps, as-planted maps, soil test results, as-applied maps, and/or management zones, among others. Data formats may include shape files, native data formats of third parties, and/or farm management information system (FMIS) exports, among others. Receiving data may occur via manual upload, e-mail with attachment, external APIs that push data to the mobile application, or instructions that call APIs of external systems to pull data into the mobile application. In one embodiment, mobile computer application <b>200</b> comprises a data inbox. In response to receiving a selection of the data inbox, the mobile computer application <b>200</b> may display a graphical user interface for manually uploading data files and importing uploaded files to a data manager.</p>
<p id="p-0063" num="0074">In one embodiment, digital map book instructions <b>206</b> comprise field map data layers stored in device memory and are programmed with data visualization tools and geospatial field notes. This provides growers with convenient information close at hand for reference, logging and visual insights into field performance. In one embodiment, overview and alert instructions <b>204</b> are programmed to provide an operation-wide view of what is important to the grower, and timely recommendations to take action or focus on particular issues. This permits the grower to focus time on what needs attention, to save time and preserve yield throughout the season. In one embodiment, seeds and planting instructions <b>208</b> are programmed to provide tools for seed selection, hybrid placement, and script creation, including variable rate (VR) script creation, based upon scientific models and empirical data. This enables growers to maximize yield or return on investment through optimized seed purchase, placement and population.</p>
<p id="p-0064" num="0075">In one embodiment, script generation instructions <b>205</b> are programmed to provide an interface for generating scripts, including variable rate (VR) fertility scripts. The interface enables growers to create scripts for field implements, such as nutrient applications, planting, and irrigation. For example, a planting script interface may comprise tools for identifying a type of seed for planting. Upon receiving a selection of the seed type, mobile computer application <b>200</b> may display one or more fields broken into management zones, such as the field map data layers created as part of digital map book instructions <b>206</b>. In one embodiment, the management zones comprise soil zones along with a panel identifying each soil zone and a soil name, texture, drainage for each zone, or other field data. Mobile computer application <b>200</b> may also display tools for editing or creating such, such as graphical tools for drawing management zones, such as soil zones, over a map of one or more fields. Planting procedures may be applied to all management zones or different planting procedures may be applied to different subsets of management zones. When a script is created, mobile computer application <b>200</b> may make the script available for download in a format readable by an application controller, such as an archived or compressed format. Additionally, and/or alternatively, a script may be sent directly to cab computer <b>115</b> from mobile computer application <b>200</b> and/or uploaded to one or more data servers and stored for further use.</p>
<p id="p-0065" num="0076">In one embodiment, nitrogen instructions <b>210</b> are programmed to provide tools to inform nitrogen decisions by visualizing the availability of nitrogen to crops. This enables growers to maximize yield or return on investment through optimized nitrogen application during the season. Example programmed functions include displaying images such as SSURGO images to enable drawing of fertilizer application zones and/or images generated from subfield soil data, such as data obtained from sensors, at a high spatial resolution (as fine as millimeters or smaller depending on sensor proximity and resolution); upload of existing grower-defined zones; providing a graph of plant nutrient availability and/or a map to enable tuning application(s) of nitrogen across multiple zones; output of scripts to drive machinery; tools for mass data entry and adjustment; and/or maps for data visualization, among others. &#x201c;Mass data entry,&#x201d; in this context, may mean entering data once and then applying the same data to multiple fields and/or zones that have been defined in the system; example data may include nitrogen application data that is the same for many fields and/or zones of the same grower, but such mass data entry applies to the entry of any type of field data into the mobile computer application <b>200</b>. For example, nitrogen instructions <b>210</b> may be programmed to accept definitions of nitrogen application and practices programs and to accept user input specifying to apply those programs across multiple fields. &#x201c;Nitrogen application programs,&#x201d; in this context, refers to stored, named sets of data that associates: a name, color code or other identifier, one or more dates of application, types of material or product for each of the dates and amounts, method of application or incorporation such as injected or broadcast, and/or amounts or rates of application for each of the dates, crop or hybrid that is the subject of the application, among others. &#x201c;Nitrogen practices programs,&#x201d; in this context, refer to stored, named sets of data that associates: a practices name; a previous crop; a tillage system; a date of primarily tillage; one or more previous tillage systems that were used; one or more indicators of application type, such as manure, that were used. Nitrogen instructions <b>210</b> also may be programmed to generate and cause displaying a nitrogen graph, which indicates projections of plant use of the specified nitrogen and whether a surplus or shortfall is predicted; in some embodiments, different color indicators may signal a magnitude of surplus or magnitude of shortfall. In one embodiment, a nitrogen graph comprises a graphical display in a computer display device comprising a plurality of rows, each row associated with and identifying a field; data specifying what crop is planted in the field, the field size, the field location, and a graphic representation of the field perimeter; in each row, a timeline by month with graphic indicators specifying each nitrogen application and amount at points correlated to month names; and numeric and/or colored indicators of surplus or shortfall, in which color indicates magnitude.</p>
<p id="p-0066" num="0077">In one embodiment, the nitrogen graph may include one or more user input features, such as dials or slider bars, to dynamically change the nitrogen planting and practices programs so that a user may optimize his nitrogen graph. The user may then use his optimized nitrogen graph and the related nitrogen planting and practices programs to implement one or more scripts, including variable rate (VR) fertility scripts. Nitrogen instructions <b>210</b> also may be programmed to generate and cause displaying a nitrogen map, which indicates projections of plant use of the specified nitrogen and whether a surplus or shortfall is predicted; in some embodiments, different color indicators may signal a magnitude of surplus or magnitude of shortfall. The nitrogen map may display projections of plant use of the specified nitrogen and whether a surplus or shortfall is predicted for different times in the past and the future (such as daily, weekly, monthly or yearly) using numeric and/or colored indicators of surplus or shortfall, in which color indicates magnitude. In one embodiment, the nitrogen map may include one or more user input features, such as dials or slider bars, to dynamically change the nitrogen planting and practices programs so that a user may optimize his nitrogen map, such as to obtain a preferred amount of surplus to shortfall. The user may then use his optimized nitrogen map and the related nitrogen planting and practices programs to implement one or more scripts, including variable rate (VR) fertility scripts. In other embodiments, similar instructions to the nitrogen instructions <b>210</b> could be used for application of other nutrients (such as phosphorus and potassium), application of pesticide, and irrigation programs.</p>
<p id="p-0067" num="0078">In one embodiment, weather instructions <b>212</b> are programmed to provide field-specific recent weather data and forecasted weather information. This enables growers to save time and have an efficient integrated display with respect to daily operational decisions.</p>
<p id="p-0068" num="0079">In one embodiment, field health instructions <b>214</b> are programmed to provide timely remote sensing images highlighting in-season crop variation and potential concerns. Example programmed functions include cloud checking, to identify possible clouds or cloud shadows; determining nitrogen indices based on field images; graphical visualization of scouting layers, including, for example, those related to field health, and viewing and/or sharing of scouting notes; and/or downloading satellite images from multiple sources and prioritizing the images for the grower, among others.</p>
<p id="p-0069" num="0080">In one embodiment, performance instructions <b>216</b> are programmed to provide reports, analysis, and insight tools using on-farm data for evaluation, insights and decisions. This enables the grower to seek improved outcomes for the next year through fact-based conclusions about why return on investment was at prior levels, and insight into yield-limiting factors. The performance instructions <b>216</b> may be programmed to communicate via the network(s) <b>109</b> to back-end analytics programs executed at agricultural intelligence computer system <b>130</b> and/or external data server computer <b>108</b> and configured to analyze metrics such as yield, yield differential, hybrid, population, SSURGO zone, soil test properties, or elevation, among others. Programmed reports and analysis may include yield variability analysis, treatment effect estimation, benchmarking of yield and other metrics against other growers based on anonymized data collected from many growers, or data for seeds and planting, among others.</p>
<p id="p-0070" num="0081">Applications having instructions configured in this way may be implemented for different computing device platforms while retaining the same general user interface appearance. For example, the mobile application may be programmed for execution on tablets, smartphones, or server computers that are accessed using browsers at client computers. Further, the mobile application as configured for tablet computers or smartphones may provide a full app experience or a cab app experience that is suitable for the display and processing capabilities of cab computer <b>115</b>. For example, referring now to view (b) of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, in one embodiment a cab computer application <b>220</b> may comprise maps-cab instructions <b>222</b>, remote view instructions <b>224</b>, data collect and transfer instructions <b>226</b>, machine alerts instructions <b>228</b>, script transfer instructions <b>230</b>, and scouting-cab instructions <b>232</b>. The code base for the instructions of view (b) may be the same as for view (a) and executables implementing the code may be programmed to detect the type of platform on which they are executing and to expose, through a graphical user interface, only those functions that are appropriate to a cab platform or full platform. This approach enables the system to recognize the distinctly different user experience that is appropriate for an in-cab environment and the different technology environment of the cab. The maps-cab instructions <b>222</b> may be programmed to provide map views of fields, farms or regions that are useful in directing machine operation. The remote view instructions <b>224</b> may be programmed to turn on, manage, and provide views of machine activity in real-time or near real-time to other computing devices connected to the system <b>130</b> via wireless networks, wired connectors or adapters, and the like. The data collect and transfer instructions <b>226</b> may be programmed to turn on, manage, and provide transfer of data collected at sensors and controllers to the system <b>130</b> via wireless networks, wired connectors or adapters, and the like. The machine alerts instructions <b>228</b> may be programmed to detect issues with operations of the machine or tools that are associated with the cab and generate operator alerts. The script transfer instructions <b>230</b> may be configured to transfer in scripts of instructions that are configured to direct machine operations or the collection of data. The scouting-cab instructions <b>232</b> may be programmed to display location-based alerts and information received from the system <b>130</b> based on the location of the field manager computing device <b>104</b>, agricultural apparatus <b>111</b>, or sensors <b>112</b> in the field and ingest, manage, and provide transfer of location-based scouting observations to the system <b>130</b> based on the location of the agricultural apparatus <b>111</b> or sensors <b>112</b> in the field.</p>
<heading id="h-0012" level="2">2.3. Data Ingest to the Computer System</heading>
<p id="p-0071" num="0082">In an embodiment, external data server computer <b>108</b> stores external data <b>110</b>, including soil data representing soil composition for the one or more fields and weather data representing temperature and precipitation on the one or more fields. The weather data may include past and present weather data as well as forecasts for future weather data. In an embodiment, external data server computer <b>108</b> comprises a plurality of servers hosted by different entities. For example, a first server may contain soil composition data while a second server may include weather data. Additionally, soil composition data may be stored in multiple servers. For example, one server may store data representing percentage of sand, silt, and clay in the soil while a second server may store data representing percentage of organic matter (OM) in the soil.</p>
<p id="p-0072" num="0083">In an embodiment, remote sensor <b>112</b> comprises one or more sensors that are programmed or configured to produce one or more observations. Remote sensor <b>112</b> may be aerial sensors, such as satellites, vehicle sensors, planting equipment sensors, tillage sensors, fertilizer or insecticide application sensors, harvester sensors, and any other implement capable of receiving data from the one or more fields. In an embodiment, application controller <b>114</b> is programmed or configured to receive instructions from agricultural intelligence computer system <b>130</b>. Application controller <b>114</b> may also be programmed or configured to control an operating parameter of an agricultural vehicle or implement. For example, an application controller may be programmed or configured to control an operating parameter of a vehicle, such as a tractor, planting equipment, tillage equipment, fertilizer or insecticide equipment, harvester equipment, or other farm implements such as a water valve. Other embodiments may use any combination of sensors and controllers, of which the following are merely selected examples.</p>
<p id="p-0073" num="0084">The system <b>130</b> may obtain or ingest data under user <b>102</b> control, on a mass basis from a large number of growers who have contributed data to a shared database system.</p>
<p id="p-0074" num="0085">This form of obtaining data may be termed &#x201c;manual data ingest&#x201d; as one or more user-controlled computer operations are requested or triggered to obtain data for use by the system <b>130</b>. As an example, the CLIMATE FIELDVIEW application, commercially available from The Climate Corporation, San Francisco, Calif., may be operated to export data to system <b>130</b> for storing in the repository <b>160</b>.</p>
<p id="p-0075" num="0086">For example, seed monitor systems can both control planter apparatus components and obtain planting data, including signals from seed sensors via a signal harness that comprises a CAN backbone and point-to-point connections for registration and/or diagnostics. Seed monitor systems can be programmed or configured to display seed spacing, population and other information to the user via the cab computer <b>115</b> or other devices within the system <b>130</b>. Examples are disclosed in U.S. Pat. No. 8,738,243 and U.S. Pat. Pub. 20150094916, and the present disclosure assumes knowledge of those other patent disclosures.</p>
<p id="p-0076" num="0087">Likewise, yield monitor systems may contain yield sensors for harvester apparatus that send yield measurement data to the cab computer <b>115</b> or other devices within the system <b>130</b>. Yield monitor systems may utilize one or more remote sensors <b>112</b> to obtain grain moisture measurements in a combine or other harvester and transmit these measurements to the user via the cab computer <b>115</b> or other devices within the system <b>130</b>.</p>
<p id="p-0077" num="0088">In an embodiment, examples of sensors <b>112</b> that may be used with any moving vehicle or apparatus of the type described elsewhere herein include kinematic sensors and position sensors. Kinematic sensors may comprise any of speed sensors such as radar or wheel speed sensors, accelerometers, or gyros. Position sensors may comprise GPS receivers or transceivers, or WiFi-based position or mapping apps that are programmed to determine location based upon nearby WiFi hotspots, among others.</p>
<p id="p-0078" num="0089">In an embodiment, examples of sensors <b>112</b> that may be used with tractors or other moving vehicles include engine speed sensors, fuel consumption sensors, area counters or distance counters that interact with GPS or radar signals, PTO (power take-off) speed sensors, tractor hydraulics sensors configured to detect hydraulics parameters such as pressure or flow, and/or and hydraulic pump speed, wheel speed sensors or wheel slippage sensors. In an embodiment, examples of controllers <b>114</b> that may be used with tractors include hydraulic directional controllers, pressure controllers, and/or flow controllers; hydraulic pump speed controllers; speed controllers or governors; hitch position controllers; or wheel position controllers provide automatic steering.</p>
<p id="p-0079" num="0090">In an embodiment, examples of sensors <b>112</b> that may be used with seed planting equipment such as planters, drills, or air seeders include seed sensors, which may be optical, electromagnetic, or impact sensors; downforce sensors such as load pins, load cells, pressure sensors; soil property sensors such as reflectivity sensors, moisture sensors, electrical conductivity sensors, optical residue sensors, or temperature sensors; component operating criteria sensors such as planting depth sensors, downforce cylinder pressure sensors, seed disc speed sensors, seed drive motor encoders, seed conveyor system speed sensors, or vacuum level sensors; or pesticide application sensors such as optical or other electromagnetic sensors, or impact sensors. In an embodiment, examples of controllers <b>114</b> that may be used with such seed planting equipment include: toolbar fold controllers, such as controllers for valves associated with hydraulic cylinders; downforce controllers, such as controllers for valves associated with pneumatic cylinders, airbags, or hydraulic cylinders, and programmed for applying downforce to individual row units or an entire planter frame; planting depth controllers, such as linear actuators; metering controllers, such as electric seed meter drive motors, hydraulic seed meter drive motors, or swath control clutches; hybrid selection controllers, such as seed meter drive motors, or other actuators programmed for selectively allowing or preventing seed or an air-seed mixture from delivering seed to or from seed meters or central bulk hoppers; metering controllers, such as electric seed meter drive motors, or hydraulic seed meter drive motors; seed conveyor system controllers, such as controllers for a belt seed delivery conveyor motor; marker controllers, such as a controller for a pneumatic or hydraulic actuator; or pesticide application rate controllers, such as metering drive controllers, orifice size or position controllers.</p>
<p id="p-0080" num="0091">In an embodiment, examples of sensors <b>112</b> that may be used with tillage equipment include position sensors for tools such as shanks or discs; tool position sensors for such tools that are configured to detect depth, gang angle, or lateral spacing; downforce sensors; or draft force sensors. In an embodiment, examples of controllers <b>114</b> that may be used with tillage equipment include downforce controllers or tool position controllers, such as controllers configured to control tool depth, gang angle, or lateral spacing.</p>
<p id="p-0081" num="0092">In an embodiment, examples of sensors <b>112</b> that may be used in relation to apparatus for applying fertilizer, insecticide, fungicide and the like, such as on-planter starter fertilizer systems, subsoil fertilizer applicators, or fertilizer sprayers, include: fluid system criteria sensors, such as flow sensors or pressure sensors; sensors indicating which spray head valves or fluid line valves are open; sensors associated with tanks, such as fill level sensors; sectional or system-wide supply line sensors, or row-specific supply line sensors; or kinematic sensors such as accelerometers disposed on sprayer booms. In an embodiment, examples of controllers <b>114</b> that may be used with such apparatus include pump speed controllers; valve controllers that are programmed to control pressure, flow, direction, PWM and the like; or position actuators, such as for boom height, subsoiler depth, or boom position.</p>
<p id="p-0082" num="0093">In an embodiment, examples of sensors <b>112</b> that may be used with harvesters include yield monitors, such as impact plate strain gauges or position sensors, capacitive flow sensors, load sensors, weight sensors, or torque sensors associated with elevators or augers, or optical or other electromagnetic grain height sensors; grain moisture sensors, such as capacitive sensors; grain loss sensors, including impact, optical, or capacitive sensors; header operating criteria sensors such as header height, header type, deck plate gap, feeder speed, and reel speed sensors; separator operating criteria sensors, such as concave clearance, rotor speed, shoe clearance, or chaffer clearance sensors; auger sensors for position, operation, or speed; or engine speed sensors. In an embodiment, examples of controllers <b>114</b> that may be used with harvesters include header operating criteria controllers for elements such as header height, header type, deck plate gap, feeder speed, or reel speed; separator operating criteria controllers for features such as concave clearance, rotor speed, shoe clearance, or chaffer clearance; or controllers for auger position, operation, or speed.</p>
<p id="p-0083" num="0094">In an embodiment, examples of sensors <b>112</b> that may be used with grain carts include weight sensors, or sensors for auger position, operation, or speed. In an embodiment, examples of controllers <b>114</b> that may be used with grain carts include controllers for auger position, operation, or speed.</p>
<p id="p-0084" num="0095">In an embodiment, examples of sensors <b>112</b> and controllers <b>114</b> may be installed in unmanned aerial vehicle (UAV) apparatus or &#x201c;drones.&#x201d; Such sensors may include cameras with detectors effective for any range of the electromagnetic spectrum including visible light, infrared, ultraviolet, near-infrared (NIR), and the like; accelerometers; altimeters; temperature sensors; humidity sensors; pitot tube sensors or other airspeed or wind velocity sensors; battery life sensors; or radar emitters and reflected radar energy detection apparatus;</p>
<p id="p-0085" num="0096">other electromagnetic radiation emitters and reflected electromagnetic radiation detection apparatus. Such controllers may include guidance or motor control apparatus, control surface controllers, camera controllers, or controllers programmed to turn on, operate, obtain data from, manage and configure any of the foregoing sensors. Examples are disclosed in U.S. patent application Ser. No. 14/831,165 and the present disclosure assumes knowledge of that other patent disclosure.</p>
<p id="p-0086" num="0097">In an embodiment, sensors <b>112</b> and controllers <b>114</b> may be affixed to soil sampling and measurement apparatus that is configured or programmed to sample soil and perform soil chemistry tests, soil moisture tests, and other tests pertaining to soil. For example, the apparatus disclosed in U.S. Pat. No. 8,767,194 and U.S. Pat. No. 8,712,148 may be used, and the present disclosure assumes knowledge of those patent disclosures.</p>
<p id="p-0087" num="0098">In an embodiment, sensors <b>112</b> and controllers <b>114</b> may comprise weather devices for monitoring weather conditions of fields. For example, the apparatus disclosed in U.S. patent application Ser. No. 15/551,582, filed on Aug. 16, 2017, may be used, and the present disclosure assumes knowledge of those patent disclosures.</p>
<heading id="h-0013" level="2">2.4. Process Overview-Agronomic Model Training</heading>
<p id="p-0088" num="0099">In an embodiment, the agricultural intelligence computer system <b>130</b> is programmed or configured to create an agronomic model. In this context, an agronomic model is a data structure in memory of the agricultural intelligence computer system <b>130</b> that comprises field data <b>106</b>, such as identification data and harvest data for one or more fields. The agronomic model may also comprise calculated agronomic properties which describe either conditions which may affect the growth of one or more crops on a field, or properties of the one or more crops, or both. Additionally, an agronomic model may comprise recommendations based on agronomic factors such as crop recommendations, irrigation recommendations, planting recommendations, fertilizer recommendations, fungicide recommendations, pesticide recommendations, harvesting recommendations and other crop management recommendations. The agronomic factors may also be used to estimate one or more crop related results, such as agronomic yield. The agronomic yield of a crop is an estimate of quantity of the crop that is produced, or in some examples the revenue or profit obtained from the produced crop.</p>
<p id="p-0089" num="0100">In an embodiment, the agricultural intelligence computer system <b>130</b> may use a preconfigured agronomic model to calculate agronomic properties related to currently received location and crop information for one or more fields. The preconfigured agronomic model is based upon previously processed field data, including but not limited to, identification data, harvest data, fertilizer data, and weather data. The preconfigured agronomic model may have been cross validated to ensure accuracy of the model. Cross validation may include comparison to ground truthing that compares predicted results with actual results on a field, such as a comparison of precipitation estimate with a rain gauge or sensor providing weather data at the same or nearby location or an estimate of nitrogen content with a soil sample measurement.</p>
<p id="p-0090" num="0101"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a programmed process by which the agricultural intelligence computer system generates one or more preconfigured agronomic models using field data provided by one or more data sources. <figref idref="DRAWINGS">FIG. <b>3</b></figref> may serve as an algorithm or instructions for programming the functional elements of the agricultural intelligence computer system <b>130</b> to perform the operations that are now described.</p>
<p id="p-0091" num="0102">At block <b>305</b>, the agricultural intelligence computer system <b>130</b> is configured or programmed to implement agronomic data preprocessing of field data received from one or more data sources. The field data received from one or more data sources may be preprocessed for the purpose of removing noise, distorting effects, and confounding factors within the agronomic data including measured outliers that could adversely affect received field data values. Embodiments of agronomic data preprocessing may include, but are not limited to, removing data values commonly associated with outlier data values, specific measured data points that are known to unnecessarily skew other data values, data smoothing, aggregation, or sampling techniques used to remove or reduce additive or multiplicative effects from noise, and other filtering or data derivation techniques used to provide clear distinctions between positive and negative data inputs.</p>
<p id="p-0092" num="0103">At block <b>310</b>, the agricultural intelligence computer system <b>130</b> is configured or programmed to perform data subset selection using the preprocessed field data in order to identify datasets useful for initial agronomic model generation. The agricultural intelligence computer system <b>130</b> may implement data subset selection techniques including, but not limited to, a genetic algorithm method, an all subset models method, a sequential search method, a stepwise regression method, a particle swarm optimization method, and an ant colony optimization method. For example, a genetic algorithm selection technique uses an adaptive heuristic search algorithm, based on evolutionary principles of natural selection and genetics, to determine and evaluate datasets within the preprocessed agronomic data.</p>
<p id="p-0093" num="0104">At block <b>315</b>, the agricultural intelligence computer system <b>130</b> is configured or programmed to implement field dataset evaluation. In an embodiment, a specific field dataset is evaluated by creating an agronomic model and using specific quality thresholds for the created agronomic model. Agronomic models may be compared and/or validated using one or more comparison techniques, such as, but not limited to, root mean square error with leave-one-out cross validation (RMSECV), mean absolute error, and mean percentage error. For example, RMSECV can cross validate agronomic models by comparing predicted agronomic property values created by the agronomic model against historical agronomic property values collected and analyzed. In an embodiment, the agronomic dataset evaluation logic is used as a feedback loop where agronomic datasets that do not meet configured quality thresholds are used during future data subset selection steps (block <b>310</b>).</p>
<p id="p-0094" num="0105">At block <b>320</b>, the agricultural intelligence computer system <b>130</b> is configured or programmed to implement agronomic model creation based upon the cross validated agronomic datasets. In an embodiment, agronomic model creation may implement multivariate regression techniques to create preconfigured agronomic data models.</p>
<p id="p-0095" num="0106">At block <b>325</b>, the agricultural intelligence computer system <b>130</b> is configured or programmed to store the preconfigured agronomic data models for future field data evaluation.</p>
<heading id="h-0014" level="2">2.5. Implementation Example-Hardware Overview</heading>
<p id="p-0096" num="0107">According to one embodiment, the techniques described herein are implemented by one or more special-purpose computing devices. The special-purpose computing devices may be hard-wired to perform the techniques, or may include digital electronic devices such as one or more application-specific integrated circuits (ASICs) or field programmable gate arrays (FPGAs) that are persistently programmed to perform the techniques, or may include one or more general purpose hardware processors programmed to perform the techniques pursuant to program instructions in firmware, memory, other storage, or a combination. Such special-purpose computing devices may also combine custom hard-wired logic, ASICs, or FPGAs with custom programming to accomplish the techniques. The special-purpose computing devices may be desktop computer systems, portable computer systems, handheld devices, networking devices or any other device that incorporates hard-wired and/or program logic to implement the techniques.</p>
<p id="p-0097" num="0108">For example, <figref idref="DRAWINGS">FIG. <b>4</b></figref> is a block diagram that illustrates a computer system <b>400</b> upon which an embodiment of the invention may be implemented. Computer system <b>400</b> includes a bus <b>402</b> or other communication mechanism for communicating information, and a hardware processor <b>404</b> coupled with bus <b>402</b> for processing information. Hardware processor <b>404</b> may be, for example, a general purpose microprocessor.</p>
<p id="p-0098" num="0109">Computer system <b>400</b> also includes a main memory <b>406</b>, such as a random access memory (RAM) or other dynamic storage device, coupled to bus <b>402</b> for storing information and instructions to be executed by processor <b>404</b>. Main memory <b>406</b> also may be used for storing temporary variables or other intermediate information during execution of instructions to be executed by processor <b>404</b>. Such instructions, when stored in non-transitory storage media accessible to processor <b>404</b>, render computer system <b>400</b> into a special-purpose machine that is customized to perform the operations specified in the instructions.</p>
<p id="p-0099" num="0110">Computer system <b>400</b> further includes a read only memory (ROM) <b>408</b> or other static storage device coupled to bus <b>402</b> for storing static information and instructions for processor <b>404</b>. A storage device <b>410</b>, such as a magnetic disk, optical disk, or solid-state drive is provided and coupled to bus <b>402</b> for storing information and instructions.</p>
<p id="p-0100" num="0111">Computer system <b>400</b> may be coupled via bus <b>402</b> to a display <b>412</b>, such as a cathode ray tube (CRT), for displaying information to a computer user. An input device <b>414</b>, including alphanumeric and other keys, is coupled to bus <b>402</b> for communicating information and command selections to processor <b>404</b>. Another type of user input device is cursor control <b>416</b>, such as a mouse, a trackball, or cursor direction keys for communicating direction information and command selections to processor <b>404</b> and for controlling cursor movement on display <b>412</b>. This input device typically has two degrees of freedom in two axes, a first axis (e.g., x) and a second axis (e.g., y), that allows the device to specify positions in a plane.</p>
<p id="p-0101" num="0112">Computer system <b>400</b> may implement the techniques described herein using customized hard-wired logic, one or more ASICs or FPGAs, firmware and/or program logic which in combination with the computer system causes or programs computer system <b>400</b> to be a special-purpose machine. According to one embodiment, the techniques herein are performed by computer system <b>400</b> in response to processor <b>404</b> executing one or more sequences of one or more instructions contained in main memory <b>406</b>. Such instructions may be read into main memory <b>406</b> from another storage medium, such as storage device <b>410</b>. Execution of the sequences of instructions contained in main memory <b>406</b> causes processor <b>404</b> to perform the process steps described herein. In alternative embodiments, hard-wired circuitry may be used in place of or in combination with software instructions.</p>
<p id="p-0102" num="0113">The term &#x201c;storage media&#x201d; as used herein refers to any non-transitory media that store data and/or instructions that cause a machine to operate in a specific fashion. Such storage media may comprise non-volatile media and/or volatile media. Non-volatile media includes, for example, optical disks, magnetic disks, or solid-state drives, such as storage device <b>410</b>. Volatile media includes dynamic memory, such as main memory <b>406</b>. Common forms of storage media include, for example, a floppy disk, a flexible disk, hard disk, solid-state drive, magnetic tape, or any other magnetic data storage medium, a CD-ROM, any other optical data storage medium, any physical medium with patterns of holes, a RAM, a PROM, and EPROM, a FLASH-EPROM, NVRAM, any other memory chip or cartridge.</p>
<p id="p-0103" num="0114">Storage media is distinct from but may be used in conjunction with transmission media. Transmission media participates in transferring information between storage media. For example, transmission media includes coaxial cables, copper wire and fiber optics, including the wires that comprise bus <b>402</b>. Transmission media can also take the form of acoustic or light waves, such as those generated during radio-wave and infrared data communications.</p>
<p id="p-0104" num="0115">Various forms of media may be involved in carrying one or more sequences of one or more instructions to processor <b>404</b> for execution. For example, the instructions may initially be carried on a magnetic disk or solid-state drive of a remote computer. The remote computer can load the instructions into its dynamic memory and send the instructions over a telephone line using a modem. A modem local to computer system <b>400</b> can receive the data on the telephone line and use an infra-red transmitter to convert the data to an infra-red signal. An infra-red detector can receive the data carried in the infrared signal and appropriate circuitry can place the data on bus <b>402</b>. Bus <b>402</b> carries the data to main memory <b>406</b>, from which processor <b>404</b> retrieves and executes the instructions. The instructions received by main memory <b>406</b> may optionally be stored on storage device <b>410</b> either before or after execution by processor <b>404</b>.</p>
<p id="p-0105" num="0116">Computer system <b>400</b> also includes a communication interface <b>418</b> coupled to bus <b>402</b>. Communication interface <b>418</b> provides a two-way data communication coupling to a network link <b>420</b> that is connected to a local network <b>422</b>. For example, communication interface <b>418</b> may be an integrated services digital network (ISDN) card, cable modem, satellite modem, or a modem to provide a data communication connection to a corresponding type of telephone line. As another example, communication interface <b>418</b> may be a local area network (LAN) card to provide a data communication connection to a compatible LAN. Wireless links may also be implemented. In any such implementation, communication interface <b>418</b> sends and receives electrical, electromagnetic or optical signals that carry digital data streams representing various types of information.</p>
<p id="p-0106" num="0117">Network link <b>420</b> typically provides data communication through one or more networks to other data devices. For example, network link <b>420</b> may provide a connection through local network <b>422</b> to a host computer <b>424</b> or to data equipment operated by an Internet Service Provider (ISP) <b>426</b>. ISP <b>426</b> in turn provides data communication services through the world wide packet data communication network now commonly referred to as the &#x201c;Internet&#x201d; <b>428</b>. Local network <b>422</b> and Internet <b>428</b> both use electrical, electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link <b>420</b> and through communication interface <b>418</b>, which carry the digital data to and from computer system <b>400</b>, are example forms of transmission media.</p>
<p id="p-0107" num="0118">Computer system <b>400</b> can send messages and receive data, including program code, through the network(s), network link <b>420</b> and communication interface <b>418</b>. In the Internet example, a server <b>430</b> might transmit a requested code for an application program through Internet <b>428</b>, ISP <b>426</b>, local network <b>422</b> and communication interface <b>418</b>.</p>
<p id="p-0108" num="0119">The received code may be executed by processor <b>404</b> as it is received, and/or stored in storage device <b>410</b>, or other non-volatile storage for later execution.</p>
<heading id="h-0015" level="2">3. Functional Descriptions</heading>
<heading id="h-0016" level="2">3.1. Training Set and Digital Model Construction</heading>
<p id="p-0109" num="0120">In some embodiments, the server <b>170</b> is programmed to collect one or more training sets of images to train digital models for recognizing plant diseases. For corn, the one or more training sets of images may include photos of corn leaves. Each photo preferably shows non-overlapping disease symptoms. The common corn diseases include Anthracnose Leaf Blight (ALB), Common Rust (CR), Eyespot (EYE), Gray Leaf Spot (GLS), Goss's Wilt (GW), Northern Leaf Blight (NLB), Northern Leaf Spot (NLS), Southern Leaf Blight (SLB), and Southern Rust (SR). The symptoms of different diseases tend to look different. For example, CR, EYE, SR, and GLS at an early stage (GLS-Early) tend to produce relatively small lesions that are dot-like or slightly elongated, while GW, NLB, and GLS at a late stage (GLS-Late) tend to produce relatively large lesions that are strip-like or greatly elongated. Therefore, at least two training sets can be constructed to train at least two digital models, with each digital model designed to classify an input image into one or more classes corresponding to one or more plant diseases having similarly-sized symptoms.</p>
<p id="p-0110" num="0121">In some embodiments, given a specific image, the server <b>170</b> can be programmed to first resize the specific image to a standard size and then extract images from the resized image for a training set using a sliding window with a certain stride (the number of pixels to shift the sliding window over the input image). The server <b>170</b> can be programmed to further assign a class label of one of the one or more classes noted above to each of the extracted images. Specifically, the server <b>170</b> can be programmed to receive the class label from an expert or automatically determine the class label based on images of known disease symptoms. For example, an image of a symptom of a known disease at an appropriate resolution can be matched to an extracted image using any matching technique known to someone skilled in the art, and the extracted image can be assigned a class label corresponding to the known disease when the match is successful.</p>
<p id="p-0111" num="0122"><figref idref="DRAWINGS">FIG. <b>7</b>A</figref> illustrates an example approach of extracting sample images from a photo showing symptoms of a plant disease that are relatively small. In some embodiments, the given image is a photo of a corn leaf having symptoms of SR. The server <b>170</b> can be programmed to resize the given image into the image <b>702</b> to a first size with a first scaling factor relatively to a fixed-sized sliding window, such as from 3,000 pixels by 4,000 pixels to 1,120 (224*5) pixels by 1,493 pixels with the first scaling factor being 5 relative to a sliding window having a size of 224 pixels by 224 pixels, using a resizing technique known to someone skilled in the art. The image <b>720</b> still shows relatively small symptoms of SR, such as the lesion in the area <b>710</b>. The server <b>170</b> is programmed to then apply a sliding window that is relatively small to the image <b>702</b> row by row or column by column with a certain stride that determines where the next position of the sliding window is relative to the current position. For example, with the sliding window having a size of 224 pixels by 224 pixels, the stride can be 224 pixels leading to no overlap between the next position and the current position, and a total of 30 images can be extracted when the image <b>702</b> has 1,120 pixels by 1,493 pixels. Therefore, from an initial position <b>704</b> of the sliding window, the next position in the same row would be <b>706</b>, and the next position in the same column would be <b>708</b>. The portion of the image <b>702</b> corresponding to each position of the sliding window can be extracted and assigned a class label. In this example, the portion corresponding to the position <b>704</b> can be assigned a label of &#x201c;SW&#x201d; for the SR disease class given the presence of SR lesions, the portion corresponding to the position <b>706</b> can similarly be assigned a label of &#x201c;SR&#x201d;, and the portion corresponding to the position <b>706</b> can be assigned a label that represents a healthy condition or a lack of disease symptoms for a no disease (ND) class.</p>
<p id="p-0112" num="0123"><figref idref="DRAWINGS">FIG. <b>7</b>B</figref> illustrates an example approach of extracting sample images from a photo showing symptoms of a plant disease that are relatively large. In some embodiments, the image can be a photo of a corn leaf having symptoms of GW. The server <b>170</b> is programmed to resize the given image into the image <b>712</b> with a second scaling factor smaller than the first scaling factor, such as from 3,000 pixels by 4,000 pixels to 448 (224*2) pixels by 597 pixels with the second scaling factor being 2, using a resizing technique known to someone skilled in the art. The image <b>712</b> still shows relatively large symptoms of GW, such as the lesion in the area <b>718</b>. The server <b>170</b> is programmed to then apply a sliding window that is relatively large to the image to the image <b>712</b> row by row or column by column with a certain stride that determines where the next position of the sliding window is relative to the current position. For example, with the sliding window having size of 224 pixels by 224 pixels, the stride can be 112 pixels leading to a half overlap between the next position and the current position, and a total of 12 images can be extracted when the image <b>712</b> has 448 pixels by 597 pixels. Therefore, from an initial position <b>714</b> of the sliding window, the next position in the same row would be <b>716</b>. The portion of the image <b>712</b> corresponding to each position of the sliding window can be extracted and assigned a class label. In this example, the portion corresponding to the position <b>714</b> can be assigned a label of &#x201c;GW&#x201d; for the GW disease class given the presence of GW lesions, and the portion corresponding to the position <b>716</b> can similarly be assigned a label of &#x201c;GW&#x201d;.</p>
<p id="p-0113" num="0124">In some embodiments, the server <b>170</b> is programmed to process a number of images to extract enough sample images for each of the plant diseases. The images can be retrieved from image servers or from user devices. The images preferably show symptoms of each plant disease in different conditions, such as at different points within the lifecycle of the plant, resulting from different lighting conditions, or having different shapes, sizes, or scales. To further increase the breadth of a digital model, the server <b>170</b> can be programmed to include more images showing overlapping symptoms of a plant disease having relatively large symptoms and a plant disease having relatively small symptoms to improve detection of the relatively small symptoms. For example, these images can show overlapping symptoms of GLS-Late (large) and CR (small), GW (large) and CR, GW and SR (small), NLB (large) and CR, or NLB and SR. The server <b>170</b> can be programmed to further assign each image extracted from one of these images to the class corresponding to the dominant disease based on the total area covered by the symptoms of each disease in the extracted image.</p>
<p id="p-0114" num="0125">In some embodiments, the server <b>170</b> is programmed to generate variants of the extracted images to augment the training set. More specifically, the server <b>170</b> can be configured to rotate or further scale the extracted images. For corn, there can be at least <b>200</b> images for the healthy condition and for each corn disease, including less than 10% that show overlapping symptoms. Two digital models can be constructed, a first one for detecting corn diseases having relatively small symptoms and a second one for detecting corn diseases having relatively large symptoms. Therefore, a first training set and a second training set can be built respectfully for the first digital model and the second digital model, as illustrated in <figref idref="DRAWINGS">FIG. <b>7</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>7</b>B</figref>. Each training set can include images showing symptoms of the corn diseases to be detected by the corresponding digital model. Depending on how the digital models are to be applied to a test image, each training set can include additional images. When the first digital model and the second digital model are to be applied sequentially, as further discussed below, the first training set can include additional images that show symptoms of those diseases which the second digital model is designed to detect and that are assigned a common label representing a catch-all class of all those diseases. These additional images can be generated by processing (scaled to capture a certain field of view, etc.) an original image used for the second training set as an original image used for the first training set.</p>
<p id="p-0115" num="0126">In some embodiments, the server <b>170</b> is programmed to build the digital models for recognizing plant diseases from the training sets. The digital models can be any classification models known to someone skilled in the art, such as a decision tree or a CNN. For corn, the server <b>170</b> can be programmed to build the two digital models from the two training sets, as discussed above. The first digital model is used to recognize corn diseases having relatively small symptoms, such as CR, EYE, SR, or GLS-Early, and the second digital model is used to recognize corn diseases having relatively large symptoms, such as GW, NLB, or GLS-Late. To implement each digital model as a CNN, public libraries can be used, such as the ResNet-50 package available on the GitHub platform.</p>
<heading id="h-0017" level="2">3.2. Digital Model Execution</heading>
<p id="p-0116" num="0127">In some embodiments, the server <b>170</b> is programmed to receive a new image to be classified from a user device and apply the digital models to the new image to obtain classifications. For corn, the server <b>170</b> can be programmed to apply the two digital models in sequence to first detect corn diseases having relatively small symptoms and subsequently detect corn diseases having relatively large symptoms.</p>
<p id="p-0117" num="0128"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates an example process of recognizing plant diseases having multi-sized symptoms from a plant image using multiple digital models. In some embodiments, the plant is corn, and the plant image is a photo of a corn leaf. Given a new image <b>802</b> to be classified, the server <b>170</b> is programmed to first apply the first digital model for recognizing corn diseases having relatively small symptoms. Specifically, the server <b>170</b> can be programmed to resize the new image <b>802</b> similarly by the first scaling factor noted above into a resized image, such as from 3,000 pixels by 4,000 pixels to 1,120 (224*5) pixels by 1,493 pixels with the first scaling factor being 5. The server <b>170</b> is programmed to then apply a sliding window that is relatively small to the resized image row by row or column by column with a certain stride that determines where the next position of the sliding window is relative to the current position. The size of the sliding window would generally be equal to the size of a sample image (an extracted image) used to build the first digital model. For example, the sliding window can have a size of 224 pixels by 224 pixels, and the stride can be 224 pixels. For each position of the sliding window, the server <b>170</b> can be programmed to apply the first digital model <b>804</b> to the portion of the resized image within the sliding window to obtain a classification corresponding to the healthy condition, one of the corn diseases having relatively small symptoms, or the collection of corn diseases having relatively large symptoms. For example, the portions <b>806</b> are classified into CR, EYE, SR, GLS-Early, or ND, and the portions <b>812</b> are classified into an other diseases (OD) class.</p>
<p id="p-0118" num="0129">In some embodiments, the server <b>170</b> can be programmed to map each portion of the resized image extracted by the sliding window back into a region of the new image <b>802</b>. The server <b>170</b> is programmed to further prepare a prediction map for the new image <b>802</b> where each mapped region is shown with an indicator of the corresponding classification.</p>
<p id="p-0119" num="0130"><figref idref="DRAWINGS">FIG. <b>9</b>A</figref> illustrates an example prediction map showing results of applying a first digital model to a plant image to recognize plant diseases having relatively small symptoms. In some embodiments, given the scale between the size of the sliding window and the size of a new image, essentially a relatively small sliding window is moved through different positions within a new image <b>920</b>, including the position <b>902</b>. Each region (first region) of the new image <b>920</b> corresponding to a position of the sliding window is then labeled with the corresponding classification in the prediction map <b>922</b> according to the legend <b>906</b>. For example, the region <b>912</b> has been classified into the OD class representing the combination of corn diseases having relatively large symptoms.</p>
<p id="p-0120" num="0131">Referring back to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, in some embodiments, for the portions of the resized image that are classified into the OD class corresponding to the collection of corn diseases having relatively large symptoms, the server <b>170</b> is programmed to apply the second digital model <b>808</b> for recognizing corn diseases having relatively large symptoms. Referring back to <figref idref="DRAWINGS">FIG. <b>9</b>A</figref>, each such portion, such as the one mapped to the region <b>912</b>, corresponds to a relatively small field of view and thus typically only part of a relatively large symptom, as shown in the area <b>932</b>. Therefore, the server <b>170</b> is programmed to apply the second digital model <b>808</b> to multiple such portions at once. More specifically, for each such portion, the server <b>170</b> can be configured to also consider a certain number of surrounding portions or a certain fraction of a surrounding portion in each direction to approximately match the field of view used for building the second digital model. For example, each such portion of 224 pixels by 224 pixels can be considered together with one surrounding portion in each direction, leading to a combined portion of 672 (224*3) pixels by 672 pixels. The server <b>170</b> can be configured to further resize the combined portion to the size of an input image for the second digital model, effecting resulting in a scaling factor of 5/3. The server <b>170</b> can be configured to then apply the second digital model to the resized combined portion to obtain a classification corresponding to one of the corn diseases having relatively large symptoms. Referring back to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the resized combined portions <b>810</b> are classified into GW, NLB, or GLS-Early.</p>
<p id="p-0121" num="0132">In some embodiments, instead of including into the combined portion a neighboring portion that has not been classified into the ND class, the server <b>170</b> can be programmed to mask (e.g., with zero values) each of the plurality of first regions in the new image <b>802</b> that is classified into a class corresponding to one of the first plurality of plant diseases or a healthy condition. In some embodiments, the server <b>170</b> can be programmed to resize the new image <b>802</b> with masked portions similarly by the second scaling factor noted above into a resized image, such as from 224 pixels by 224 pixels to 448 (224*2) pixels by 448 pixels with the first scaling factor being 2. The server <b>170</b> can be programmed to then apply a sliding window that is relatively large to the resized image row by row or column by column with a certain stride. The size of the sliding window would generally be equal to the size of a sample image (extracted image) used to train the second digital model. For example, the sliding window can have a size of 224 pixels by 224 pixels, and the stride can be 112 or 224 pixels. For each position of the sliding window, the server <b>170</b> can be programmed to then apply the second digital model <b>804</b> to the portion of the resized image or the portion corresponding to the combined portion classified into the OD class within the sliding window to obtain a classification corresponding to one of the corn diseases having relatively large symptoms. In other embodiments, the server <b>170</b> is programmed to include images corresponding to a catch-all class only in the second training set and apply the second digital model before applying the first digital model to a new image.</p>
<p id="p-0122" num="0133">Referring back to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, in some embodiments, the server <b>170</b> can be programmed to similarly map each portion classified by the second digital model back into a region of the image <b>802</b>. The server <b>170</b> is programmed to further update the prediction map for the image <b>802</b> where each newly mapped region is shown with an indicator of the corresponding classification. The server <b>170</b> can be programmed to then transmit classification data related to the updated prediction map to the user device.</p>
<p id="p-0123" num="0134"><figref idref="DRAWINGS">FIG. <b>9</b>B</figref> illustrates an example prediction map showing results of applying a second digital model to a plant image to recognize plant diseases having relatively large symptoms. In some embodiments, given the scale between the size of the sliding window and the size of a new image, essentially a relatively large sliding window is moved through different positions within the new image <b>920</b> or only within the portion classified into the OD class by the first digital model, including the position <b>910</b>. Each region (second region) of the new image <b>920</b> corresponding to a position of the sliding window is then labeled with the corresponding classification in the prediction map <b>922</b>, overwriting existing values. For example, the region <b>912</b> illustrated in <figref idref="DRAWINGS">FIG. <b>9</b>A</figref> that was classified into the OD class is now under the region <b>908</b> classified into the class corresponding to GLS-Late. Therefore, while the new image <b>920</b> shows overlapping symptoms of SR and GLS-Late, both diseases are detected from different regions of the new image <b>920</b>.</p>
<p id="p-0124" num="0135">In some embodiments, the server <b>170</b> is programmed to further process the updated prediction map. The server <b>170</b> can be configured to compute the total area classified into each of the classes and conclude that disease corresponding to the class having the largest total area is the dominant disease in the plant captured in the new image. For example, the updated prediction map <b>922</b> shows that symptoms of SR and GLS-Late each occupy approximately half of the new image <b>920</b> and thus could be considered as the dominant disease for the particular corn captured in the new image <b>920</b>. The server <b>170</b> can be configured to further transmit dominance information related to the dominant disease to the user device.</p>
<heading id="h-0018" level="2">3.3. Example Processes</heading>
<p id="p-0125" num="0136"><figref idref="DRAWINGS">FIG. <b>10</b></figref> illustrates an example method performed by a server computer that is programmed for recognizing plant diseases having multi-sized symptoms from a plant image. <figref idref="DRAWINGS">FIG. <b>10</b></figref> is intended to disclose an algorithm, plan or outline that can be used to implement one or more computer programs or other software elements which when executed cause performing the functional improvements and technical advances that are described herein. Furthermore, the flow diagrams herein are described at the same level of detail that persons of ordinary skill in the art ordinarily use to communicate with one another about algorithms, plans, or specifications forming a basis of software programs that they plan to code or implement using their accumulated skill and knowledge.</p>
<p id="p-0126" num="0137">In some embodiments, in step <b>1002</b>, the server <b>170</b> is programmed or configured to obtain a first training set comprising a first photo showing a first symptom of one of a first plurality of plant diseases, a second photo showing no symptom, and a third photo showing a partial second symptom of one of a second plurality of plant diseases. The first plurality of plant diseases produce symptoms having sizes within a first range. The second plurality of plant diseases produce symptoms having sizes within a second range. The first symptom is smaller than the second symptom, and the first, second, and third photos correspond to a commonly-sized field of view. The server <b>170</b> can be configured to generate the first training set from photos showing multi-sized disease symptoms by using a sliding window suitable for capturing individual symptoms of the first plurality of plant diseases.</p>
<p id="p-0127" num="0138">In some embodiments, in step <b>1004</b>, the server <b>170</b> is programmed or configured to build a first CNN from the first training set for classifying an image into a class corresponding to one of the first plurality of plant diseases, a healthy condition, or a combination of the second plurality of plant diseases. Therefore, when the first CNN is configured to recognize symptoms of k diseases, the first CNN is configured to classify an image into one of k+2 classes. It is also possible to lump the no-disease class into the catch-all class and configure the second CNN to classify an image into the no-disease class.</p>
<p id="p-0128" num="0139">In some embodiments, in step <b>1006</b>, the server <b>170</b> is programmed or configured to obtain a second training set comprising a photo showing the second symptom. The server <b>170</b> can be similarly configured to generate the second training set from photos showing multi-sized or just multiple disease symptoms by using a sliding window suitable for capturing individual symptoms of the second plurality of plant diseases.</p>
<p id="p-0129" num="0140">In some embodiments, the server <b>170</b> is programmed or configured to build a second CNN from the second training set for classifying an image into a class corresponding to one of the second plurality of plant diseases. The server <b>170</b> can be configured to send the first and second CNNs to another computing device, which can then be configured to apply the two CNNs to classify a new photo of an infected plant.</p>
<p id="p-0130" num="0141">In some embodiments, in step <b>1008</b>, the server <b>170</b> is programmed or configured to receive a new image from a user device. The new image can be a photo of an infected plant showing multi-sized symptoms.</p>
<p id="p-0131" num="0142">In some embodiments, in step <b>1010</b>, the server <b>170</b> is programmed or configured to apply the first CNN to a plurality of first regions within the new image to obtain a plurality of classifications. The size of each of the first regions is suitable for representing individual symptoms of the first plurality of plant diseases.</p>
<p id="p-0132" num="0143">In some embodiments, in step <b>1012</b>, the server <b>170</b> is programmed or configured to apply the second CNN to one or more second regions within combination of first regions classified into the class corresponding to the combination of the second plurality of plant diseases to obtain one or more classifications, each of the plurality of first regions being smaller than the one second region. The size of each of the second regions is suitable for representing individual symptoms of the second plurality of plant diseases.</p>
<p id="p-0133" num="0144">In some embodiments, in step <b>1014</b>, the server <b>170</b> is programmed or configured to transmit classification data related to the plurality of classifications that are into a class corresponding to one of the first plurality of plant diseases or the healthy condition and the one or more classifications to the user device. The classification data may include, for one or more regions of the new image, the size of the region and the corresponding classification. The server <b>170</b> can be further configured to identify a dominant disease for the new image, such as the disease to which the largest area of the new image has been classified, and send information regarding the dominant disease as part of the classification data.</p>
<heading id="h-0019" level="2">4. Extensions and Alternatives</heading>
<p id="p-0134" num="0145">In the foregoing specification, embodiments of the invention have been described with reference to numerous specific details that may vary from implementation to implementation. The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense. The sole and exclusive indicator of the scope of the invention, and what is intended by the applicants to be the scope of the invention, is the literal and equivalent scope of the set of claims that issue from this application, in the specific form in which such claims issue, including any subsequent correction.</p>
<?detailed-description description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text><b>1</b>. A computer system comprising:
<claim-text>a classification model management server computer configured, by instructions, to:</claim-text>
<claim-text>receive a new image from a user device;</claim-text>
<claim-text>apply a first digital model to a plurality of first regions within the new image for classifying each of the plurality of first regions within the new image into a class of a first set of classes corresponding to a first plurality of plant diseases, a healthy condition, or a combination of a second plurality of plant diseases;</claim-text>
<claim-text>apply a second digital model to one or more second regions within the new image for classifying each of the one or more second regions within the new image into a class of a second set of classes corresponding to the second plurality of plant diseases, the one or more second regions each corresponding to a combination of multiple first regions of the plurality of first regions, the multiple first regions each further being classified into the class corresponding to the combination of the second plurality of plant diseases; and</claim-text>
<claim-text>transmit classification data related to the class of the first set of classes and the class of the second set of classes for each of the plurality of first regions and each of the one or more second regions to the user device.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text><b>2</b>. The computer system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the classification model management server computer is configured, by the instructions, as part of applying the first digital model, to:
<claim-text>resize the new image according to a first image size to obtain a first updated image; and</claim-text>
<claim-text>extract the plurality of first regions from the first updated image using a sliding window with a predetermined first stride.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text><b>3</b>. The computer system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the classification model management server computer is configured, by the instructions, as part of applying the second digital model, to:
<claim-text>mask each of the plurality of first regions in the new image that is classified into a class corresponding to one of the first plurality of plant diseases or a healthy condition to obtain a masked image;</claim-text>
<claim-text>resize the masked image according to the second image size to obtain a second updated image; and</claim-text>
<claim-text>extract the one or more second regions from the second updated image using a sliding window with a predetermined second stride.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text><b>4</b>. The computer system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the classification model management server computer is configured, by the instructions, as part of applying the second digital model, to:
<claim-text>resize a portion of a combination of multiple first regions of the plurality of first regions to obtain the one or more second regions.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text><b>5</b>. The computer system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the classification model management server computer is further configured, by the instructions, to:
<claim-text>compute a total size of the plurality of first regions and the one or more second regions classified into each of the first set of classes and the second set of classes; and</claim-text>
<claim-text>determine a dominant class of the first set of classes and the second set of classes such that the total size of the plurality of first regions and the one or more second regions classified into the dominant class is largest, the classification data including information regarding the dominant class.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text><b>6</b>. The computer system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first digital model and/or the second digital model include(s) a convolutional neural network (CNN) or a decision tree.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text><b>7</b>. The computer system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first plurality of plant diseases includes Common Rust, Eyespot, Southern Rust, or Gray Leaf Spot at an early stage, and the second plurality of plant diseases includes Goss's Wilt, Northern Leaf Blight, or Gray Leaf Spot at a late stage.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text><b>8</b>. The computer system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the instructions include model execution instructions, and wherein the classification model management server computer is further configured, by model construction instructions, to:
<claim-text>obtain a first training set from at least a first photo showing a first symptom of one of the first plurality of plant diseases, a second photo showing no symptom, and a third photo showing a partial second symptom of one of the second plurality of plant diseases, the first training set including a label of the class of the first set of classes for each of a first set of areas in the first photo, the second photo, or the third photo, the first, second, and third photos corresponding to similarly-sized fields of view;</claim-text>
<claim-text>build the first digital model from the first training set;</claim-text>
<claim-text>obtain a second training set from at least a fourth photo showing the second symptom, the second training set including a label of the class of the second set of classes for each of a second set of areas in the fourth photo; and</claim-text>
<claim-text>build the second digital model from the second training set.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text><b>9</b>. The computer system of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the classification model management server computer is configured, by the model construction instructions, as part of obtaining the first training set, to:
<claim-text>identify a size of a sliding window;</claim-text>
<claim-text>determine a first scaling factor;</claim-text>
<claim-text>determine a first image size based on the size of the sliding window and the first scaling factor; and</claim-text>
<claim-text>resize the first photo, the second photo, or the third photo according to the first image size to obtain a first resized photo, a second resize photo, or a third resized photo.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text><b>10</b>. The computer system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the first training set is obtained from a specific photo showing a third symptom of one of the first plurality of plant diseases and a fourth symptom of one of the second plurality of plant diseases, the fourth symptom overlapping with the third symptom.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text><b>11</b>. The computer system of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the classification model management server computer is configured, by the model construction instructions, as part of obtaining the second training set, to:
<claim-text>determine a second scaling factor smaller than the first scaling factor;</claim-text>
<claim-text>determine a second image size based on the size of the sliding window and the second scaling factor; and</claim-text>
<claim-text>resize the fourth photo according to the second image size to obtain a fourth resized photo.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text><b>12</b>. The computer system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the classification management server computer is further configured, by the model construction instructions, to:
<claim-text>determine a first stride and a second stride smaller than the first stride;</claim-text>
<claim-text>wherein the classification management server computer is configured, by the model construction instructions, as part of obtaining the first training set, to:
<claim-text>extract a first set of areas from the first resized photo, the second resized photo, or the third resized photo using the sliding window with the first stride; and</claim-text>
</claim-text>
<claim-text>wherein the classification model management server is configured, by the model construction instructions, as part of obtaining the second training set, to:
<claim-text>extract a second set of areas from the fourth resized photo using the sliding window with the second stride.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012-1" num="00012-1">
<claim-text><b>12</b>. The computer system of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein ones of the second set of areas overlap with other ones of the second set of areas.</claim-text>
</claim>
</claims>
</us-patent-application>
